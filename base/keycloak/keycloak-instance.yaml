# Keycloak instance
apiVersion: keycloak.org/v1alpha1
kind: Keycloak
metadata:
  name: mykeycloak
  labels:
    app: mykeycloak
spec:
  externalAccess:
    enabled: true
  instances: 1
---
# Realm
apiVersion: keycloak.org/v1alpha1
kind: KeycloakRealm
metadata:
  name: myrealm
  labels:
    realm: myrealm
spec:
  instanceSelector:
    matchLabels:
      app: mykeycloak
  realm:
    realm: myrealm
    enabled: true
---
apiVersion: keycloak.org/v1alpha1
kind: KeycloakClient
metadata:
  name: artemis-broker
spec:
  realmSelector:
     matchLabels:
      realm: myrealm
  client:
    clientId: artemis-broker
    enabled: true
    publicClient: false
    clientAuthenticatorType: client-secret
    secret: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
    fullScopeAllowed: true
    directAccessGrantsEnabled: true
    protocol: openid-connect
    defaultClientScopes:
      - web-origins
      - role_list
      - profile
      - roles
      - email
    optionalClientScopes:
      - address
      - phone
      - offline_access
      - microprofile-jwt
  roles:
    - name: admin
    - name: producer
    - name: consumer
---
apiVersion: keycloak.org/v1alpha1
kind: KeycloakUser
metadata:
  name: myadmin
spec:
  realmSelector:
    matchLabels:
      realm: myrealm
  user:
    username: myadmin
    enabled: true
    firstName: AMQ Admin
    clientRoles:
      artemis-broker:
        - admin
---
apiVersion: keycloak.org/v1alpha1
kind: KeycloakUser
metadata:
  name: myproducer
spec:
  realmSelector:
    matchLabels:
      realm: myrealm
  user:
    username: myproducer
    enabled: true
    firstName: Message producer
    clientRoles:
      artemis-broker:
        - producer
---
apiVersion: keycloak.org/v1alpha1
kind: KeycloakUser
metadata:
  name: myconsumer
spec:
  realmSelector:
    matchLabels:
      realm: myrealm
  user:
    username: myconsumer
    enabled: true
    firstName: Message consumer
    clientRoles:
      artemis-broker:
        - consumer
